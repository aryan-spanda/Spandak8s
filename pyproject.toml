[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "spandak8s"
version = "0.1.0"
description = "CLI for the Spanda AI Platform - Manage tenants, modules, and applications"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Spanda AI", email = "support@spanda.ai"}
]
maintainers = [
    {name = "Spanda AI", email = "support@spanda.ai"}
]
keywords = ["kubernetes", "k8s", "platform", "cli", "data-lake", "spark", "minio", "dremio", "spanda"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "rich>=12.0.0",
    "pyyaml>=6.0.0",
    "requests>=2.28.0",
    "kubernetes>=24.0.0",
    "psycopg2-binary>=2.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
]
helm = [
    "helm-python>=0.1.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.0.0",
    "responses>=0.22.0",
]

[project.scripts]
spandak8s = "spandak8s:cli"
sk8s = "spandak8s:cli"

[project.urls]
Homepage = "https://github.com/spandaai/spandak8s"
Documentation = "https://docs.spanda.ai/cli"
Repository = "https://github.com/spandaai/spandak8s.git"
"Bug Tracker" = "https://github.com/spandaai/spandak8s/issues"
Changelog = "https://github.com/spandaai/spandak8s/blob/main/CHANGELOG.md"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.md"]
"config" = ["*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
